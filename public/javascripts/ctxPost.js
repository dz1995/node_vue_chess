{ request:
   { app:
      Application {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        proxy: false,
        middleware: [Array],
        subdomainOffset: 2,
        env: 'development',
        context: [Object],
        request: {},
        response: {} },
     req:
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '/users/register',
        method: 'POST',
        statusCode: null,
        statusMessage: null,
        client: [Object],
        _consuming: true,
        _dumped: false,
        read: [Function],
        _parsedUrl: [Object] },
     res:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Object],
        connection: [Object],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        statusCode: 404,
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: null },
     ctx: [Circular],
     response:
      { app: [Object],
        req: [Object],
        res: [Object],
        ctx: [Circular],
        request: [Circular] },
     originalUrl: '/users/register',
     ip: '::ffff:127.0.0.1',
     accept: Accepts { headers: [Object], negotiator: [Object] },
     body: { action: 'box' } },
  response:
   { app:
      Application {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        proxy: false,
        middleware: [Array],
        subdomainOffset: 2,
        env: 'development',
        context: [Object],
        request: {},
        response: {} },
     req:
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '/users/register',
        method: 'POST',
        statusCode: null,
        statusMessage: null,
        client: [Object],
        _consuming: true,
        _dumped: false,
        read: [Function],
        _parsedUrl: [Object] },
     res:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Object],
        connection: [Object],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        statusCode: 404,
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: null },
     ctx: [Circular],
     request:
      { app: [Object],
        req: [Object],
        res: [Object],
        ctx: [Circular],
        response: [Circular],
        originalUrl: '/users/register',
        ip: '::ffff:127.0.0.1',
        accept: [Object],
        body: [Object] } },
  app:
   Application {
     domain: null,
     _events: { error: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     proxy: false,
     middleware:
      [ [Function: bodyParser],
        [Function: filter],
        [Function: logger],
        [Function: serve],
        [Function: views],
        [AsyncFunction],
        [Object],
        [Object] ],
     subdomainOffset: 2,
     env: 'development',
     context: { onerror: [Function] },
     request: {},
     response: {} },
  req:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4803,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object],
        _peername: [Object],
        [Symbol(asyncId)]: 69,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 70,
        [Symbol(triggerId)]: 5 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4803,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object],
        _peername: [Object],
        [Symbol(asyncId)]: 69,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 70,
        [Symbol(triggerId)]: 5 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: '127.0.0.1:3000',
        connection: 'keep-alive',
        'content-length': '10',
        accept: '*/*',
        origin: 'http://127.0.0.1:3000',
        'x-requested-with': 'XMLHttpRequest',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
        referer: 'http://127.0.0.1:3000/index.html',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'zh-CN,zh;q=0.9,en;q=0.8',
        cookie: '_ga=GA1.1.1578367610.1501903022; itcast-name=s%3A0eKzjZKYhOlJ1AKZUEgEHx4lUkv7VrOz.Haa0nvG%2BWtxpLir2ay7dVrSZD%2BKrxsapRJJCVP%2BrSlk' },
     rawHeaders:
      [ 'Host',
        '127.0.0.1:3000',
        'Connection',
        'keep-alive',
        'Content-Length',
        '10',
        'Accept',
        '*/*',
        'Origin',
        'http://127.0.0.1:3000',
        'X-Requested-With',
        'XMLHttpRequest',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',
        'Content-Type',
        'application/x-www-form-urlencoded; charset=UTF-8',
        'Referer',
        'http://127.0.0.1:3000/index.html',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'zh-CN,zh;q=0.9,en;q=0.8',
        'Cookie',
        '_ga=GA1.1.1578367610.1501903022; itcast-name=s%3A0eKzjZKYhOlJ1AKZUEgEHx4lUkv7VrOz.Haa0nvG%2BWtxpLir2ay7dVrSZD%2BKrxsapRJJCVP%2BrSlk' ],
     trailers: {},
     rawTrailers: [],
     upgrade: false,
     url: '/users/register',
     method: 'POST',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4803,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object],
        _peername: [Object],
        [Symbol(asyncId)]: 69,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 70,
        [Symbol(triggerId)]: 5 },
     _consuming: true,
     _dumped: false,
     read: [Function],
     _parsedUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/users/register',
        path: '/users/register',
        href: '/users/register',
        _raw: '/users/register' } },
  res:
   ServerResponse {
     domain: null,
     _events: { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4803,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 69,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 70,
        [Symbol(triggerId)]: 5 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4803,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(asyncId)]: 69,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 70,
        [Symbol(triggerId)]: 5 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     statusCode: 404,
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(outHeadersKey)]: null },
  originalUrl: '/users/register',
  cookies:
   Cookies {
     secure: false,
     request:
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '/users/register',
        method: 'POST',
        statusCode: null,
        statusMessage: null,
        client: [Object],
        _consuming: true,
        _dumped: false,
        read: [Function],
        _parsedUrl: [Object] },
     response:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Object],
        connection: [Object],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        statusCode: 404,
        __onFinished: [Object],
        [Symbol(outHeadersKey)]: null },
     keys: undefined },
  accept:
   Accepts {
     headers:
      { host: '127.0.0.1:3000',
        connection: 'keep-alive',
        'content-length': '10',
        accept: '*/*',
        origin: 'http://127.0.0.1:3000',
        'x-requested-with': 'XMLHttpRequest',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
        referer: 'http://127.0.0.1:3000/index.html',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'zh-CN,zh;q=0.9,en;q=0.8',
        cookie: '_ga=GA1.1.1578367610.1501903022; itcast-name=s%3A0eKzjZKYhOlJ1AKZUEgEHx4lUkv7VrOz.Haa0nvG%2BWtxpLir2ay7dVrSZD%2BKrxsapRJJCVP%2BrSlk' },
     negotiator: Negotiator { request: [Object] } },
  state: {},
  render: [Function],
  matched:
   [ Layer {
       opts: [Object],
       name: null,
       methods: [Array],
       paramNames: [],
       stack: [Array],
       path: '/users/register',
       regexp: /^\/users\/register(?:\/(?=$))?$/i } ],
  router:
   Router {
     opts: { prefix: '/users' },
     methods: [ 'HEAD', 'OPTIONS', 'GET', 'PUT', 'PATCH', 'POST', 'DELETE' ],
     params: {},
     stack: [ [Object], [Object], [Object] ] },
  _matchedRoute: '/users/register',
  captures: [],
  params: {} }
[Function: next]
POST /users/register - 63ms
  --> POST /users/register 200 66ms 971b
[Function: next]